// Code generated by go-bindata.
// sources:
// border_left.png
// border_top.png
// border_topleft.png
// mask_topleft.png
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _border_leftPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\x6b\x6c\x1c\x57\xd9\xc7\x4f\xde\xfa\x8d\x5c\x27\x16\x16\xb1\x0a\x09\xaa\x3a\x9a\x40\x4b\x94\x8e\x67\xce\xec\xce\xee\xce\xb0\x9e\xd8\x9d\xb5\xf1\x96\x6c\xba\xbe\x24\xb5\xad\x44\xf4\xcc\xcc\x19\x7b\xc8\xce\x85\x99\xb1\xbd\x36\x04\xe5\x22\x47\x6d\x4a\x53\x5a\x85\xaa\x8e\x5b\xf5\x03\x02\x45\xaa\x5a\x11\x7a\x15\x69\x09\x97\xa8\x45\x08\xa5\x4a\x49\x55\xa9\xd0\x98\x92\x4a\x41\x5c\xa5\x52\xa0\x25\x15\x46\xb3\xeb\xb5\xd7\x7b\xb1\x1c\x5c\x10\x95\xce\x48\x6b\xc9\xe7\x39\xff\xff\x6f\xe6\x5c\x9e\x7d\xe6\x7c\xd8\x7b\xb2\xbb\x3e\xdf\xdc\xb4\xa5\x09\x00\xd0\x9c\xee\x49\xf5\x01\x00\x5a\xc3\x4f\xe3\x7a\x00\xc0\x7d\xf7\xdc\xd8\x0c\x00\xb8\xde\xed\x19\xf2\x01\xd8\xb0\x29\xfc\xac\x03\x27\x1f\xf9\x24\x00\xeb\x8e\x9a\x8a\x92\xcd\x8e\x3a\x81\xe3\x8f\x3a\x2e\x95\x56\x14\xca\xf5\x1c\xc3\xcc\x61\x00\xf2\x6f\x3c\xf1\xc0\xe9\xdb\xb7\xf6\xb6\x1e\x3d\x3b\x7b\x6e\x37\xbc\x6b\xf0\xf0\xf0\xdd\x7b\xb3\xe7\x54\xfa\x02\x13\xbd\x70\x73\x37\x77\x6c\x3a\x35\xfd\xe9\x37\x75\xfe\xa5\xe9\xb4\x37\xb3\xb7\xf7\xa6\x1f\x9e\xef\xde\x70\xa1\xbb\xf7\x8b\x9d\x4f\x9f\xfe\x6e\xeb\x06\xa6\xa1\xb3\x51\x3e\x42\x35\xd2\xfc\x0d\xfd\x3b\x9f\xfa\x43\xec\xea\xee\xb9\xf7\xef\xfd\xc9\x5b\x1f\xb4\xbc\xfa\x9d\xbe\x5d\x0d\xa7\x5e\x7b\x66\xf6\xb1\xd9\x07\xa6\xd5\xf4\xb3\xcf\xfd\x96\xfe\xd9\x1d\xaf\xbe\x7b\x72\x4f\x3f\x7e\xe8\xa1\x1b\xde\x8f\xfc\xdf\xa5\xc7\x5a\xc0\xfd\xd7\xf7\x6f\x1b\xb1\xfe\x79\x79\x72\x6a\xe4\x2f\x6f\xff\xe6\xe5\x1f\x5f\xe8\x18\xfe\xd4\x07\x8f\x3e\x79\xec\xcd\xa7\x3b\x02\xb0\xe7\xdb\xe6\x6b\x1d\x89\x83\x68\xdb\x9d\x47\x12\x0d\x1f\x9f\x1d\x36\x5b\x9e\xeb\xf8\x15\xd3\xfa\x05\x6a\xb8\xe3\x85\xdf\x5d\xdd\xde\xc2\x7e\xe2\xd8\x67\x1a\xbb\x0e\x3e\x7f\xe6\xc1\x57\x6e\x3b\xf5\xb1\xbb\xbf\x79\xe0\xa6\x75\xea\xee\xb9\x5b\x0e\x3d\xfc\x8c\xbd\x87\x3a\x71\xdd\xc6\xf9\xf5\x40\xf2\x9f\xf2\xe8\x99\xdb\xf5\xf7\x5e\xb9\xf8\x48\xf3\xf6\xf7\x36\xf7\x9e\xf9\xc1\xf7\x37\x9e\x3b\xf8\x35\xef\xe7\xf4\x0c\x95\x3e\xd6\xb0\xd9\x72\xcc\x83\x39\xc5\x3a\x73\xf6\xf1\xdf\x0f\x1b\x27\xbc\xdc\x8c\x75\xf1\xe2\xd1\x67\xf7\x29\xe7\x5f\x7f\xa2\x57\x39\x7e\xcb\xcb\x0f\x82\x69\x35\xfd\x8f\xc7\xe7\xde\x69\xec\x78\x37\xd9\x30\x74\xb9\xb5\xef\x48\xcb\xa5\xe6\xef\xbd\xb3\x6e\xef\x3e\x65\x6e\xdf\x37\x9a\x6f\x54\xfe\xde\xba\xf7\xd2\xf6\x5f\x08\x47\x8e\xce\x6d\x9d\x3f\x39\xbb\xff\xec\x4b\x07\xee\x3f\xdf\xf1\xcb\x7b\xaf\xbc\xd8\xac\x5c\x95\xbf\xfa\xc7\xc9\x4b\x57\x66\xae\x1c\x78\x54\x79\xfe\xff\xe3\xe7\xe3\x37\x9f\x32\xdf\xba\xef\x85\x3d\x3f\x05\xa0\x33\x6b\x0e\x0c\x06\x83\x99\x9d\x92\xe6\x58\x6d\x48\x77\x54\xdc\x96\xb7\x5c\x10\x5e\xc9\x1d\x79\x17\x69\xfb\x71\x40\xa9\x78\xc4\xb4\xdb\xe9\x3f\x9f\x39\x4b\x53\xa6\xde\x4e\xdf\x29\x64\xb8\x8c\xab\xe0\x51\xb3\x67\xca\xc3\xfd\x53\xbb\x06\xb4\xa9\xfd\x9a\xa8\xd3\x3b\xe4\xa6\x64\x5e\xca\x5b\xae\x85\x03\x44\xe5\xad\x9c\xed\x4b\xf9\x76\xba\xe0\x2b\xd9\xbe\x14\x36\xb3\x34\x55\xe8\x12\xec\x6f\xa7\x3b\xc3\x00\x35\x98\xc9\x52\x8a\xe3\x61\x4a\x68\x8b\x31\x1a\x84\x90\x8a\x8b\x6d\x50\x48\x44\x78\xe1\x56\x8a\xe7\xa0\xc0\x72\x22\x0b\x39\x86\x83\x12\xe4\x24\x9e\xa3\x16\x2e\x5a\x6e\xa2\x28\x2a\xe9\xe9\x86\xd4\x97\xea\x5e\xc0\x79\xba\xd1\x4e\x8f\x06\x81\x2b\xb1\xec\xc4\xc4\x44\xdb\x44\xa4\xcd\xf1\x46\x58\x28\x8a\x22\xcb\xf1\x2c\xcf\x33\x9e\x6e\x30\xfe\xa4\x1d\xa0\x3c\x63\xfb\x5b\x8b\x26\x25\x9f\x14\xf6\x35\xcf\x74\x03\xd3\xb1\xa9\xf0\x7f\xa4\x3a\x63\x41\x3b\x4d\x37\x51\x65\xd7\xc2\x73\x59\xee\x22\xc8\xf6\x17\xc6\x4e\x73\x2c\x36\x8f\x5c\x16\xb6\x71\x6c\x2d\x91\xae\x2d\x6a\xdc\x31\x2f\x57\xb8\x35\x5d\x63\x71\x0e\x5b\xd8\x0e\x7c\x16\xb6\xc1\x9a\xba\xbc\xe5\x66\x32\x2b\xe3\x2c\xab\xa6\xd2\x0f\xba\xc6\x83\x95\x95\xfe\xc0\xa4\x8b\xd9\x3e\xec\x3b\x63\x9e\x86\xbb\xc6\xb1\x1d\x6c\xad\x6d\xd5\x87\x8d\x6b\xb1\xea\xc3\x46\x4d\x23\xb7\x94\x01\x6a\x9b\x2d\x86\xeb\x0e\x63\x60\x1a\x75\x6e\x24\x8c\xd4\x95\xe1\xbc\x59\x47\x16\x46\x8a\x32\x79\x49\x97\xcc\x5b\xae\xa4\x78\x18\x05\x8e\x37\xe0\x38\x39\xb9\xb8\x5c\x97\xf2\x97\xa2\x14\x96\x27\xf5\xd9\x0c\xd2\x4c\x3b\x6c\xdc\x96\x64\x2b\x45\xb5\xfc\x70\x0a\x05\x58\xe6\x39\x9e\x63\xb8\x04\xc3\x89\x03\x9c\x28\x41\x51\x12\xf8\xed\x1c\x2f\x71\x5c\x99\x49\xb1\x67\x85\x47\x06\x07\x48\x47\x01\xaa\x74\x81\x50\xe2\x62\x12\x9f\x28\x77\x59\xd6\xb7\xd2\xc7\xd1\x4d\x63\x72\x55\x2e\x4b\x3d\xcb\x3c\x74\x4d\x32\x1c\xcf\x42\x81\x6c\x5a\x68\x04\xb3\xae\x3d\x92\x64\x97\x1a\x97\xd3\x32\x19\x29\x6d\xfb\x01\xb2\x35\x9c\x4e\xc9\x79\xcb\x6d\x33\x4d\x5d\x82\x3c\x82\x6a\x44\x15\x19\x9e\xd3\xe2\x4c\x54\xd4\x62\x8c\x28\xa8\x11\x26\xa6\x73\x50\x84\xf1\xa8\xc1\xe9\xf1\xc2\x2d\x2c\x97\x57\x59\xa7\x1c\x6d\x2c\xdc\x42\xe9\x94\x5c\xcc\x36\xba\xa3\x99\xfa\xd2\x4a\x93\x38\x1e\xa9\x51\x23\x11\x61\x20\x42\x98\x81\x30\x8e\x19\x55\x48\x08\x8c\xca\x63\x1c\x8b\xe1\x18\x07\xe3\xb0\x04\x2a\x33\xab\x02\xdd\xe1\x99\x23\xa6\x8d\x72\x65\x7d\xc2\x67\xd1\x4d\x5d\x12\x04\x68\xe8\x88\x33\x98\x68\x2c\x22\x30\x51\x08\x79\x46\x4d\x18\x2a\xc3\x27\x10\x2f\x60\x9d\x13\x34\x55\x2d\x21\x6a\xd8\x54\xa1\x7a\x4c\x3f\x70\xbc\x49\x79\xd9\x4a\x2e\xa4\xa9\x7e\xfc\xe5\xe5\xad\xa5\x40\xce\x2c\xa4\x2d\x17\x79\x3e\x0e\xb7\x62\x3b\x5d\xda\x8b\x74\x95\x20\xd4\x14\xb2\x83\x84\xb4\x30\xe1\xc9\x5a\x61\xc1\xe9\x49\x76\x59\x6b\x7d\x99\x59\x3d\x9d\xab\x1b\x82\x2a\x79\x7d\xc6\xc4\x28\xb6\x57\xda\x28\x65\xbd\xea\x9b\xf8\x8e\x11\x4c\x20\x0f\x77\x8e\x60\x3b\x58\xdd\x2e\xae\x25\xac\x1a\x71\xb6\x38\xe4\xff\x81\xa9\xf0\xd1\xf8\xda\x26\x42\xd5\x22\x91\x18\xaf\x47\x19\x4d\x87\xe1\x6c\xe8\x11\x46\x8d\x1b\x3c\x13\xc3\x3a\x42\x90\x8f\xa3\xa8\xc8\xad\x75\x22\x22\x11\x89\x17\xff\x17\x26\x62\x09\xa0\x8d\x22\x7b\x04\xeb\x32\x5b\x12\x96\x1a\x3e\x4a\x73\x87\xf5\x98\x21\xc4\x35\x8e\x11\xe3\x02\xcf\x44\x05\x43\x67\xc4\x58\x1c\x32\x48\x88\x61\x3e\x1a\x15\x04\xa8\xe2\x35\xcd\x5d\x65\x86\x27\x73\xb7\x98\x02\x1d\x7b\x1c\x7b\xd7\x92\x04\x5d\xe4\x21\x0b\x07\xd8\xf3\x65\xc3\x73\x2c\x0a\xb9\x6e\xce\xd4\x50\xa8\x62\xc7\x6d\x7d\xa1\xc6\x58\xfc\x1e\xa2\x02\x87\x2a\xfb\xb2\xac\xf2\xf8\x2f\x3e\xab\x8e\x3d\xf3\x5a\x56\x6a\xd9\x5d\x2e\x0e\x13\xf5\x11\x7b\xe6\x35\xef\xcd\xd5\xd5\x2b\x64\x6f\x56\x14\x2d\x6c\x75\xd5\x52\xaa\x84\xaa\xab\x9c\x52\x49\x57\x5c\x9f\xdd\xe1\x0a\x5b\xdd\x8c\x27\x0b\x6f\x28\x6b\x49\xa9\x15\xf2\x5a\xee\xfa\xbf\x5b\xf8\x55\xc9\x6b\xb9\x3b\x6b\x2d\x2f\xeb\xda\x54\x8f\x7c\xd9\x00\x97\x47\x97\x6a\x66\xc5\xc9\x39\x5e\xc6\xd1\xb1\x1c\x49\xb2\xb5\x9a\x6b\xaa\xd2\x8a\x92\x2d\x1e\xea\xc8\x3d\x29\x2a\xce\x89\x4c\x67\xb9\xba\x2c\x5c\x26\x0f\xdf\xdb\xc2\xa2\x18\xdb\x41\x21\x8f\xc8\x30\xc9\x56\xb5\x55\xf6\x1f\x0c\xd7\x41\x6e\xac\x10\x8b\xf3\x1c\xc7\x71\x2c\x0c\xff\x2e\x48\xcb\xc3\x95\xd2\xa1\x95\xa5\x43\x2b\x48\x97\x42\xbb\x6d\x33\x90\xf9\x05\x49\x45\x73\x99\x2a\x7c\xb9\x2c\x0e\x5a\xbf\x8b\x34\x2c\xc7\x04\x21\x22\x24\xd9\xca\xe6\x4a\x45\xd6\xcc\xe3\xdc\x60\xca\xb4\xb0\xed\x87\xf7\xc1\x73\x0b\x9a\xca\x40\x4d\xe1\x50\x3d\xe1\x50\x95\xb0\xb8\x3b\xcb\x8e\x3e\x8a\xe7\x2a\xec\xc2\xc1\x8a\xdc\x94\x64\x17\x0f\x75\x6a\xe5\x88\x0f\xff\x22\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\x21\x10\x02\xf9\x90\x21\x4d\x4b\x3f\x93\x80\x6d\xbd\x9d\x9e\xa0\x77\xc8\x5f\x01\xf9\xd3\x00\x00\x4a\xeb\xe9\xcb\x00\x60\x3d\x0c\x80\x7f\x1c\x80\xbf\x45\x00\x38\xd4\x01\x80\x6b\x03\x70\x59\x05\x00\xe6\x01\xd8\xe4\x9d\xf8\xd1\xdb\x3b\x01\x00\xb7\xa6\x53\x9d\x03\xf9\x37\xd4\xc1\x17\xa7\xfe\x3a\x3f\x3f\x3f\x1f\xc9\x6e\x88\xc0\xec\xe6\xaf\x6f\x49\x7c\xe9\xd7\xa7\x0e\x7d\x6b\xfd\xf1\x2d\x89\x81\x8d\x0d\x00\x80\xf9\xf9\xeb\xc0\xe1\xd7\x3f\xf7\xa7\xab\xeb\x37\x75\x01\x00\x40\xba\x6b\x57\xea\xc9\xdb\xee\x3a\xfc\xaf\x00\x00\x00\xff\xff\x4c\xe4\xfe\x2c\x94\x43\x00\x00")

func border_leftPngBytes() ([]byte, error) {
	return bindataRead(
		_border_leftPng,
		"border_left.png",
	)
}

func border_leftPng() (*asset, error) {
	bytes, err := border_leftPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "border_left.png", size: 17300, mode: os.FileMode(420), modTime: time.Unix(1596963989, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _border_topPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\x7d\x6c\xdc\xe4\x1d\xc7\x9f\xd2\x2c\x0a\x29\xd1\xa2\x35\x62\x83\x8d\x61\xb9\x0c\xd6\x75\x8e\xdf\xce\x77\x67\xeb\xe2\x26\xf8\x9a\xe5\x58\xaf\xe4\xb5\x24\x51\xaa\xf1\xd8\x7e\x9c\x98\x9e\x5f\x66\x3b\xc9\x25\x5a\xb7\x96\x2a\x15\x14\x51\x06\x2a\x88\x34\x20\xa4\x4d\x9b\x32\x21\xd8\x18\xaf\x5a\x61\x1d\x5b\x55\xa6\x69\x2a\x2a\x2b\x9a\xc4\x46\x33\x56\xb4\x4e\x7b\x11\x12\x63\x1b\xac\x68\x99\x7c\x97\xcb\x5d\xee\x25\x4a\x17\x36\x81\xf4\x58\xba\x48\x79\x7e\xcf\xf7\xfb\xb1\x9f\x97\xdf\xfd\xfc\xfc\x71\x77\x76\xef\xfa\x52\x53\xe3\xd5\x8d\x00\x80\xa6\x54\x57\xb2\x17\x00\xd0\x12\x7e\x1a\xea\x01\x00\x77\xdf\x79\x4d\x13\x00\xe0\x72\xb7\x6b\xc8\x07\x60\xd3\xe6\xf0\xb3\x01\x1c\x7b\xe8\x53\x00\x6c\x38\x64\x2a\x4a\x77\xf7\x98\x13\x38\xfe\x98\xe3\x12\x29\x45\x21\x5c\xcf\x31\xcc\x0c\x02\x20\xfb\xda\x63\xf7\x3e\x71\xd3\x96\x9e\x96\x43\x27\xe6\x4e\x0e\xb0\xb7\x0e\xde\x3e\x7c\xc7\x48\xf7\x49\x95\x3c\x43\x45\xce\x5c\xdf\xc9\x1c\x9e\x49\xce\x5c\xf7\xba\xce\x9d\x9a\x49\x79\xb3\x23\x3d\xd7\xfe\xe4\x74\xe7\xa6\x33\x9d\x3d\x5f\xe9\x78\xea\x89\x1f\xb4\x6c\xa2\xea\x3a\x1a\xe4\x83\x44\x03\xc9\x5d\xd9\xb7\xf3\xc9\xbf\x44\x2f\x0e\x2c\xbc\x77\xd7\xcf\xde\x78\xbf\xf9\x95\xef\xf6\xee\xaa\x9b\x7f\xf5\xe9\xb9\x47\xe6\xee\x9d\x51\x53\xcf\x3c\xfb\x47\xf2\x17\x37\xbf\xf2\xce\xb1\xdd\x7d\xe8\x81\x07\xae\x7c\x8f\xbf\xec\xdc\x23\xcd\xe0\x9e\xcb\xfb\xb6\x8e\x5a\xff\x3e\x3f\x35\x3d\xfa\xb7\x37\x7f\xff\xd2\x4f\xcf\xb4\x0f\x7f\xfa\xfd\x87\x1f\x3f\xfc\xfa\x53\xed\x01\xd8\xfd\x1d\xf3\xd5\xf6\xf8\x7e\xb8\xf5\x96\x83\xf1\xba\x4f\xcc\x0d\x9b\xcd\xcf\xb6\xff\x96\x6a\xf9\x32\x31\xdc\xfe\xfc\x9f\x2e\x6e\x6b\xa6\x3f\x79\xf8\x73\x0d\x3b\xf6\x3f\x77\xfc\xbe\x97\x6f\x9c\xff\xf8\x1d\xf7\xef\xbb\x76\x83\x3a\xb0\x70\xc3\x81\x07\x9f\xb6\x77\x13\x47\x37\x5e\xb1\x58\x0f\x24\xff\x49\x8f\x9c\xbd\x49\x7f\xf7\xe5\xb3\x0f\x35\x6d\x7b\xf7\xaa\x9e\xe3\x3f\xfe\xd1\x15\x27\xf7\x7f\xdd\xfb\x25\x39\x4b\xa4\x0e\xd7\x5d\x65\x39\xe6\xfe\x8c\x62\x1d\x3f\xf1\xe8\x9f\x87\x8d\xa3\x5e\x66\xd6\x3a\x7b\xf6\xd0\x33\x7b\x94\xd3\xbf\x7e\xac\x47\x39\x72\xc3\x4b\xf7\x81\x19\x35\xf5\xaf\x47\x17\xde\x6e\x68\x7f\x27\x51\x37\x74\xbe\xa5\xf7\x60\xf3\xb9\xa6\x1f\xbe\xbd\x61\x64\x8f\xb2\xb0\xe7\x9b\x4d\xd7\x28\xff\x6c\x19\x39\xb7\xed\x57\xc2\xc1\x43\x0b\x5b\x16\x8f\xcd\xed\x3d\x71\x6a\xdf\x3d\xa7\xdb\x7f\x73\xd7\x85\x17\x9a\x94\x8b\xf2\xd7\xfe\x3a\x75\xee\xc2\xec\x85\x7d\x0f\x2b\xcf\x7d\x2c\x76\x3a\x76\xfd\xbc\xf9\xc6\xdd\xcf\xef\xfe\x39\x00\x1d\xdd\x66\xff\x60\x30\x98\xde\x29\x69\x8e\xd5\x0a\x75\x47\x45\xad\x59\xcb\x05\xe1\x95\xd8\x9e\x75\xa1\xb6\x17\x05\x84\x8a\x46\x4d\xbb\x8d\x7c\xeb\xf8\x09\x92\x30\xf5\x36\xf2\x16\x21\xcd\xa4\x5d\x05\x8d\x99\x5d\xd3\x1e\xea\x9b\xde\xd5\xaf\x4d\xef\xd5\x44\x9d\xdc\x2e\x37\x26\xb2\x52\xd6\x72\x2d\x14\x40\x22\x6b\x65\x6c\x5f\xca\xb6\x91\x39\x5f\xc9\xf6\xa5\xb0\x99\x26\x89\x5c\x97\x60\x6f\x1b\xd9\x11\x06\x88\xc1\x74\x37\xa1\x38\x1e\x22\x84\xd6\x28\xa5\xb1\x2c\x4b\xc4\xc4\x56\x56\x88\xf3\x9c\xf0\x45\x82\x63\x58\x81\x66\x44\x9a\x65\x28\x86\x95\x58\x46\xe2\x18\x62\xe9\x22\xe5\x46\x82\x20\x12\x9e\x6e\x48\xbd\xc9\xce\x25\x9c\xa7\x1b\x6d\xe4\x58\x10\xb8\x12\x4d\x4f\x4e\x4e\xb6\x4e\xf2\xad\x8e\x37\x4a\xb3\xa2\x28\xd2\x0c\x47\x73\x1c\xe5\xe9\x06\xe5\x4f\xd9\x01\xcc\x52\xb6\xbf\x25\x6f\x52\xf0\x49\x22\x5f\xf3\x4c\x37\x30\x1d\x9b\x08\xff\x87\xaa\x33\x1e\xb4\x91\x64\x23\x51\x72\x2d\x3d\x97\xe5\x2e\x83\x6c\x7f\x69\xec\x34\xc7\xa2\xb3\xd0\xa5\xd9\x56\x86\xae\x26\xd2\xb5\x65\x8d\x3b\xee\x65\x72\xb7\xa6\x6b\x34\xca\x20\x0b\xd9\x81\x4f\xb3\xad\x6c\x55\x5d\xd6\x72\xd3\xe9\xd5\x71\x96\x55\x55\xe9\x07\x3b\x26\x82\xd5\x95\x7e\xff\x94\x8b\xe8\x5e\xe4\x3b\xe3\x9e\x86\x76\x4c\x20\x3b\xd8\x52\xdd\xaa\x17\x19\x97\x62\xd5\x8b\x8c\xaa\x46\x6e\x21\x03\x54\x37\x5b\x0e\xd7\x1c\xc6\xc0\x34\x6a\xdc\x48\x18\xa9\x29\x43\x59\xb3\x86\x2c\x8c\xe4\x65\x72\x51\x97\xc8\x5a\xae\xa4\x78\x08\x06\x8e\xd7\xef\x38\x19\x39\xbf\x5c\x8b\xf9\x4b\x51\x72\xcb\x93\xf8\x7c\x1a\x6a\xa6\x1d\x36\x6e\x4d\xd0\xe5\xa2\x6a\x7e\x28\x09\x03\x24\x73\x0c\xc7\x50\x4c\x9c\x62\xc4\x7e\x46\x94\x58\x51\x12\xb8\x6d\x0c\x27\x31\x4c\x89\x49\xbe\x67\x99\x47\x1a\x05\x50\x87\x01\x2c\x77\x61\x59\x89\x11\xa4\x88\x58\xea\xb2\xa2\x6f\xb9\x8f\xa3\x9b\xc6\xd4\x9a\x5c\x8a\x3d\x4b\x3c\x74\x4d\x32\x1c\xcf\x82\x81\x6c\x5a\x70\x14\xd1\xae\x3d\x9a\xa0\x8b\x8d\x2b\x69\xe9\xb4\x94\xb2\xfd\x00\xda\x1a\x4a\x25\xe5\xac\xe5\xb6\x9a\xa6\x2e\x21\x81\x89\xa8\x02\xcf\x51\x7a\x24\x26\x52\x11\x68\x08\x94\xc8\xc4\x45\x8a\xe1\x22\x90\x55\x79\x23\x2e\x18\x7c\xee\x16\x56\xca\x2b\xac\x93\x8e\x36\x1e\x6e\xa1\x54\x52\xce\x67\x1b\xdd\xd1\x4c\xbd\xb8\xd2\x24\x83\x8d\xc3\x08\xcf\x43\x8a\x85\x50\xa7\x58\x36\x86\x28\x55\x88\x0b\x94\xca\x21\x14\x8d\xa2\x28\xc3\xc6\xd8\x02\xa8\xc4\xac\x02\x74\xb3\x67\x8e\x9a\x36\xcc\x94\xf4\x09\x9f\x45\x37\x75\x49\x10\x58\x43\x87\x8c\x41\x45\xa2\xbc\x40\x45\x58\x96\xa3\xd4\xb8\xa1\x52\x5c\x1c\x72\x02\xd2\x19\x41\x53\xd5\x02\xa2\x8a\x4d\x05\xaa\xcb\xf4\x03\xc7\x9b\x92\x57\xac\xe4\x5c\x9a\xea\x43\x5f\x5d\xd9\x5a\x08\x64\xcc\x5c\xda\x72\xa1\xe7\xa3\x70\x2b\xb6\x91\x85\xbd\x48\x56\x08\x42\x4d\x2e\x3b\x48\x50\x0b\x13\x9e\xac\xe5\x16\x9c\x9e\xa0\x57\xb4\xd6\x96\x99\x95\xd3\xb9\xb6\x21\xa8\x90\xd7\x66\x4c\x8e\x21\x7b\xb5\x8d\x52\xd2\xab\xb6\x89\xef\x18\xc1\x24\xf4\x50\xc7\x28\xb2\x83\xb5\xed\xe2\x6a\xc2\x8a\x11\xa7\xf3\x43\xfe\x3f\x98\x0a\x1f\x4e\xac\x6f\x22\x54\x8d\xe7\xa3\x9c\x1e\xa1\x34\x9d\x0d\x67\x43\xe7\x29\x35\x66\x70\x54\x14\xe9\x10\xb2\x5c\x0c\x46\x44\x66\xbd\x13\xc1\xf3\x12\x27\x7e\x18\x26\xa2\x08\xd0\xc6\xa0\x3d\x8a\x74\x99\x2e\x08\x0b\x0d\x1f\xa5\xb9\x33\x62\x7c\x2c\xce\x40\x83\xd2\xa3\x62\xb8\x89\x54\x9d\x52\x79\x96\xa3\x22\xaa\xa1\x89\xf1\x28\x44\x6a\x3c\xbe\xae\xb9\x2b\xcf\xf0\x78\xee\x96\x53\xa0\x63\x4f\x20\xef\x52\x92\xa0\x0b\x3d\x68\xa1\x00\x79\xbe\x6c\x78\x8e\x45\x40\xd7\xcd\x98\x1a\x0c\x55\xf4\x84\xad\x2f\xd5\x18\xcb\xdf\x43\x44\xe0\x10\x25\x5f\x96\x15\x1e\xff\xc7\x67\xd5\x91\x67\x5e\xca\x4a\x2d\xb9\xcb\xe5\x61\x22\x3e\x62\xcf\xbc\xee\xbd\xb9\xb6\x7a\x05\xef\xcd\xb2\xa2\x85\xae\xac\x5a\x0a\x95\x50\x65\x95\x53\x28\xe9\xf2\xeb\xb3\x33\x5c\x61\x6b\x9b\xf1\x44\xee\x0d\x65\x3d\x29\xb5\x4c\x5e\xcd\x5d\xff\x6f\x0b\xbf\x0a\x79\x35\x77\x67\xbd\xe5\x65\x4d\x9b\xca\x91\x2f\x19\xe0\xd2\x68\xb1\x66\x56\x9c\x8c\xe3\xa5\x1d\x1d\xc9\x7c\x82\xae\xd6\x5c\x55\x95\x52\x94\xee\xfc\xa1\x8e\xdc\x95\x24\x62\x8c\x48\x75\x94\xaa\x4b\xc2\x25\xf2\xf0\xbd\x2d\x2c\x8a\x91\x1d\xe4\xf2\x88\xcc\x26\xe8\x8a\xb6\xf2\xfe\x83\xe1\x3a\xc8\x8c\xe7\x62\x31\x8e\x61\x18\x86\x66\xc3\xbf\x4b\xd2\xd2\x70\xb9\x74\x68\x75\xe9\xd0\x2a\xd2\x62\x68\xc0\x36\x03\x99\x5b\x92\x94\x35\x97\xa8\xc2\x97\xcb\xfc\xa0\xf5\xb9\x50\x43\x72\x54\x10\x78\x21\x41\x97\x37\x97\x2b\xba\xcd\x2c\xca\x0c\x26\x4d\x0b\xd9\x7e\x78\x1f\x1c\xb3\xa4\x29\x0f\x54\x15\x0e\xd5\x12\x0e\x55\x08\xf3\xbb\xb3\xe4\xe8\x23\x7f\xae\x42\x2f\x1d\xac\xc8\x8d\x09\x7a\xf9\x50\xa7\x5a\x8e\xf8\xe0\x2f\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x10\x0c\xc1\x90\x0f\x18\xd2\x58\xfc\x99\x04\x64\xeb\x6d\xe4\x24\xb9\x5d\xfe\xcc\xf7\x07\xfa\x01\x00\x84\xd6\xd5\x9b\x06\xc0\x7a\x10\x00\xff\x08\x00\xff\xe0\x01\x38\xd0\x0e\x80\x6b\x03\x70\x5e\x05\x80\xcd\x02\xb0\xd9\x3b\xfa\xe2\x9b\x3b\x01\x00\x74\x2a\xd9\xd1\x9f\x7d\x4d\x1d\x79\x61\xfa\xef\xdf\xa8\xff\xc2\x65\xa7\x16\x17\xbf\x77\xdb\x67\x37\x6e\xde\x78\xff\x8b\xf3\x07\xbe\x5d\x7f\xe4\xea\xf8\x6d\xbf\x9b\x3f\x10\xe1\x9a\x01\x00\x8b\x8b\x1b\x81\xb1\xa9\xfe\xba\x3f\x7c\xeb\x2d\x0b\x00\x00\x52\x3b\x76\x25\x1f\xbf\xf1\xd6\xdb\xff\x13\x00\x00\xff\xff\x5f\x6c\x30\xdf\x97\x43\x00\x00")

func border_topPngBytes() ([]byte, error) {
	return bindataRead(
		_border_topPng,
		"border_top.png",
	)
}

func border_topPng() (*asset, error) {
	bytes, err := border_topPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "border_top.png", size: 17303, mode: os.FileMode(420), modTime: time.Unix(1596963950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _border_topleftPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\x7b\x6c\x1c\xd5\x15\xc6\x6f\xd2\x24\x4d\x1c\xac\xa4\xc4\xa2\x81\x0a\x65\x3a\x21\x84\x34\x1d\xcf\x63\x77\xbc\x3b\xa3\xf5\xc4\xce\x6e\x12\x6f\xc8\x06\xbf\x12\x6c\x2b\x51\x3d\x8f\x3b\xf6\xc8\x3b\x8f\xce\x8c\xed\x75\x44\x2a\x83\x65\x63\x8c\x42\x00\xa5\xd4\x8e\x89\x90\x2a\x68\x23\xa1\x44\x49\x21\x04\x61\x68\x9e\x85\xaa\x45\xa6\x4e\x83\xa8\x78\xd8\x84\x20\x52\xb5\xa9\x5a\x51\xd4\x02\x89\xa0\x9a\x5d\xaf\xbd\xde\x5d\x5b\x4e\x4d\x2b\x90\xee\x48\x6b\xc9\xf7\xdc\xef\xfb\xcd\xdc\xc7\xd9\x33\xf7\x8f\x7d\xa8\x72\xfb\x96\xc2\x82\xdb\x0a\x00\x00\x85\xd1\x8a\x48\x35\x00\xa0\xc8\xfb\x2c\x5e\x04\x00\xd8\xf7\xd0\xed\x85\x00\x80\x25\x56\x45\xbd\x03\xc0\xd2\x15\xde\x67\x1e\x38\xf8\xe4\x4a\x00\xe6\xf5\x68\xe1\x70\x65\x65\xb3\xe9\x9a\x4e\xb3\x69\x61\xd1\x70\x18\xb3\x6c\x53\xd5\xe2\x10\x80\xc4\xdb\x47\x1e\x3b\xbe\x75\x75\x55\x51\xcf\xa9\xc1\xf3\x3b\xe8\xc6\xba\x07\x1a\x7a\x77\x55\x9e\x97\xf0\x11\xc2\x3f\x72\xe7\x66\xaa\xaf\x3b\xd2\x7d\xc7\x7b\x0a\xf3\x6a\x77\xd4\x1e\xd8\x55\xb5\xea\xf4\xf0\xe6\xa5\x23\x9b\xab\x7e\x54\xfe\xfc\xf1\x63\x45\x4b\x89\x05\xe5\x8b\x85\x2e\x6c\x31\xce\xdc\x52\xb3\xed\xb9\xab\x25\xd7\x76\x8c\x7d\xf6\xf0\xb9\x4b\xd7\x97\x5f\xf8\x45\xf5\xf6\x05\x87\xdf\x3c\x31\xf8\xd4\xe0\x63\xdd\x52\xf4\x85\x93\x7f\xc6\x7f\x77\xcf\x85\x4f\x0e\xee\xac\x81\x4f\x3c\x71\xcb\x67\xbe\xf9\xa3\x4f\x2d\x07\xfb\x97\xd4\xac\x6b\xd2\xbf\xb8\xdc\xb1\xa7\xe9\x9f\x1f\x7e\xf0\xda\xd9\x91\xb2\x86\xef\x5d\x3f\x74\xb4\xef\xbd\xe7\xcb\x5c\xb0\xf3\x19\xed\xcd\xb2\x60\xa7\xb8\xee\xde\xae\xe0\x82\x9b\x07\x1b\xb4\xe5\x27\xcb\xde\x25\x8a\xee\xc6\x1a\xca\x5e\xfe\xcb\xb5\xf5\xcb\xc9\xef\xf6\xad\x59\xbc\xa9\xf3\xc5\xa1\xc7\xdf\xd8\x78\x78\x59\xef\x4f\xf7\xae\x9a\x27\xed\x18\x5b\x7b\x7f\xff\x09\x63\x27\x76\xe0\x5b\x37\x7d\xb9\x08\xf0\xce\x73\x36\x3e\xb0\x55\xf9\xf4\x8d\x8b\x4f\x16\xae\xff\xf4\xd6\xaa\xa1\x5f\xbf\x74\xd3\xf9\xce\x9f\xd8\xaf\xe3\x03\x58\xb4\x6f\xc1\xad\xba\xa9\x75\xc6\xc3\xfa\xd0\xa9\x67\xff\xda\xa0\x1e\xb0\xe3\x03\xfa\xc5\x8b\x3d\x2f\xec\x0e\x0f\xbf\x75\xa4\x2a\xfc\xc8\xda\xd7\x1e\x07\xdd\x52\xf4\xf3\x67\xc7\x3e\x5e\x5c\xf6\x49\x68\x41\xfd\xe5\xa2\xea\xae\xe5\xa3\x85\xbf\xfa\x78\xde\xae\xdd\xe1\xb1\xdd\x8f\x16\xde\x1e\xfe\x77\xd1\xae\xd1\xf5\x7f\x64\xbb\x7a\xc6\x56\x7f\x79\x70\xb0\xe5\xd4\xab\x7b\xf7\x0f\x97\xbd\xf3\xf0\x95\x57\x0a\xc3\xd7\x84\xfb\xfe\xd6\x31\x7a\x65\xe0\xca\xde\x43\xe1\x17\x17\x06\x86\x03\x77\x1e\xd6\x2e\xed\x7b\x79\xe7\x6f\x01\x28\xaf\xd4\x6a\xeb\xdc\xba\xd8\x36\x5e\x36\xf5\x62\x51\x31\x25\x58\x9c\xd0\x2d\xe0\x5d\xa1\x0d\x09\x4b\x94\x5b\xa0\x8b\x49\xb0\x49\x33\x4a\xf1\xbf\x0f\x9d\xc2\x31\x4d\x29\xc5\xef\x65\x63\x54\xcc\x0a\xc3\x66\xad\x62\x8f\x0d\x6b\xf6\x6c\xaf\x95\xf7\xb4\xc8\x9c\x82\x6f\x10\x0a\x42\x09\x3e\xa1\x5b\x3a\x74\x45\x2c\xa1\xc7\x0d\x87\x4f\x94\xe2\x49\x5f\xde\x70\x78\xaf\x99\xc4\xb1\x64\x17\xb7\xa5\x14\x2f\xf7\x02\x58\x5d\xac\x12\x0b\x9b\x36\xc4\xd8\xe2\x12\x42\xa6\x69\x1a\x0b\x70\xc5\x34\x1b\xf4\x31\xec\x0f\x31\x86\xa2\x59\x92\xe2\x48\x9a\x22\x28\x9a\xa7\x29\x9e\xa1\xb0\xf1\x0b\x17\x0a\x30\x0c\x0b\xd9\x8a\xca\x57\x47\x36\x8f\xe3\x6c\x45\x2d\xc5\x9b\x5d\xd7\xe2\x49\xb2\xbd\xbd\xbd\xb8\xdd\x57\x6c\xda\x4d\x24\xcd\x71\x1c\x49\x31\x24\xc3\x10\xb6\xa2\x12\x4e\x87\xe1\x8a\x09\xc2\x70\x56\xa7\x4c\xd2\x3e\x11\xe8\xc8\xb6\x66\xb9\x9a\x69\x60\xde\xff\xa2\x64\xb6\xba\xa5\x38\x5e\x80\x65\x5c\xe3\xcf\xa5\x5b\x13\x20\xc3\x19\x1f\x3b\xd9\xd4\xc9\x84\x68\x91\x74\x31\x45\xe6\x13\x29\xf2\x84\xc6\x6a\xb5\xe3\xc9\x5b\x53\x64\x12\xc6\xa1\x0e\x0d\xd7\x21\xe9\x62\x3a\xaf\x2e\xa1\x5b\xb1\xd8\xcc\x38\x5d\xcf\xab\x74\xdc\x4d\x6d\xee\xcc\x4a\xa7\xb6\xc3\x82\x64\x35\x74\xcc\x56\x5b\x86\x9b\xda\xa0\xe1\xae\xce\x6f\x55\x0d\xd5\x1b\xb1\xaa\x86\x6a\x5e\x23\x2b\x9d\x01\xf2\x9b\x4d\x84\xa7\x1d\x46\x57\x53\xa7\xb9\x11\x2f\x32\xad\x0c\x26\xb4\x69\x64\x5e\x24\x25\x13\x26\x75\xa1\x84\x6e\xf1\x61\x1b\x8a\xae\x69\xd7\x9a\x66\x5c\x48\x2d\xd7\xc9\xfc\x15\x0e\x27\x97\x27\x76\x57\x4c\x94\x35\xc3\x6b\x5c\x17\x22\xb3\x45\xf9\xfc\x60\x44\x74\xa1\xc0\x50\x0c\x45\x50\x41\x82\xe2\x6a\x29\x8e\xa7\x39\x9e\x65\xd6\x53\x0c\x4f\x51\x19\x26\xa9\x9e\x59\x1e\x31\xe8\x8a\x8a\xe8\x8a\x79\x5c\x58\x1f\x4f\xd3\x99\x2e\x53\xfa\x66\xfb\x98\x8a\xa6\x76\xcc\xca\x65\xb2\x67\x86\x87\x22\xf3\xaa\x69\xeb\xa2\x2b\x68\xba\xd8\x04\x49\xcb\x68\x0a\x91\x93\x8d\x53\x69\xb1\x18\x1f\x35\x1c\x57\x34\x64\x18\x8d\x08\x09\xdd\x2a\xd6\x34\x85\x67\x95\x80\x3f\x28\x53\x01\x82\x91\x69\x3f\xe1\xf7\x2b\x2c\xc1\xc9\x01\x86\x60\x7c\xb4\xca\x88\x0c\x27\xa9\x62\x20\x79\x0b\x53\xe5\x39\xd6\x11\x53\x6e\xf5\xb6\x50\x34\x22\xa4\xb2\x8d\x62\xca\x9a\x32\xb9\xd2\x78\x99\x09\x42\x85\x83\x90\xa0\x45\xd1\x47\xd0\x74\x00\x12\x12\x1b\x64\x09\x89\x81\xb0\xa4\x04\x96\x50\x74\x80\x4e\x83\x32\xcc\x72\x40\xf7\xd8\x5a\x93\x66\x88\xf1\x8c\x3e\xde\xb3\x28\xde\xb3\xb0\xb4\xaa\x88\x94\x4a\xf8\x4b\x7c\x2c\xe1\xa7\x69\x86\x90\x82\xaa\x44\x30\x41\x91\x61\xa1\x42\xb1\xb2\x24\xa5\x11\x79\x6c\x72\x50\x15\x9a\xe3\x9a\x76\x87\x30\x65\x25\x27\xd3\x54\x0d\xfc\xf1\xd4\xd6\x74\x20\xae\x25\xd3\x96\x25\xda\x0e\xf4\xb6\x62\x29\x9e\xde\x8b\x78\x8e\xc0\xd3\x24\xb3\x03\x2f\xca\x5e\xc2\x13\xe4\xe4\x82\x53\x42\xe4\x94\xd6\xe9\x65\x5a\x9e\xe9\x9c\xd5\x10\xe4\xc8\xa7\x67\xb4\x37\x43\x63\xa6\x8d\x92\xd1\x6b\x7a\x13\xc7\x54\xdd\x76\xd1\x86\xe5\x4d\xd0\x70\x67\xb7\x8b\xf3\x09\x73\x46\x9c\x4c\x0d\xf9\xff\x60\x2a\x1c\xb1\x6d\x6e\x13\x21\xc9\x3e\x5f\x09\xa3\xf8\x09\x59\xa1\xbd\xd9\x50\x7c\x84\x14\x50\x19\xa2\x04\x2a\xa2\x48\x33\x01\xd1\xcf\x51\x73\x9d\x08\x9f\x8f\x67\xb8\xaf\xc3\x44\x4c\x02\xe4\x66\xd1\x68\x82\x8a\x40\xa6\x85\xe9\x86\x6f\xd4\xdc\xf9\x7c\x9c\xa4\xb2\x12\xe1\xa3\xfc\x0c\xe1\xa7\x64\x89\x90\x14\x8e\x25\xb8\xa0\x18\x94\x69\xc8\xca\x1c\x0d\xe7\x3a\x77\x53\x32\x3c\x9a\xbb\x89\x14\x68\x1a\x6d\xd0\xbe\x91\x24\x68\x89\xb6\xa8\x43\x17\xda\x8e\xa0\xda\xa6\x8e\x89\x96\x15\xd7\x64\xd1\x53\x91\x6d\x86\x32\x5e\x63\x4c\x7c\x0f\x61\xae\x89\x65\x7c\x59\xe6\x78\xfc\x1f\x9f\x55\x81\xb6\x76\x23\x2b\x35\xe3\x2e\x27\x86\x09\xfb\x86\x3d\xf3\x9c\xf7\xe6\xec\xea\x15\xb4\x37\xb3\x8a\x16\x32\xb7\x6a\x49\x57\x42\xb9\x55\x4e\xba\xa4\x4b\xad\xcf\xcd\xde\x0a\x9b\xdd\x8c\x87\x92\x6f\x28\x73\x49\xa9\x59\xf2\x7c\xee\xca\x7f\x5b\xf8\xe5\xc8\xf3\xb9\x9b\x73\x2d\x2f\xa7\xb5\xc9\x1d\xf9\x8c\x01\xce\x8c\x4e\xd6\xcc\x61\x33\x6e\xda\x31\x53\x81\x82\x2f\x44\xe6\x6b\xce\xab\x8a\x86\xc3\x95\xa9\x43\x1d\xa1\x22\x82\x05\x28\x8e\x28\xcf\x54\x67\x84\x33\xe4\xde\x7b\x9b\x57\x14\x43\xc3\x4d\xe6\x11\x81\x0e\x91\x39\x6d\xd9\xfd\xeb\xbc\x75\x10\x6f\x4d\xc6\x02\x0c\x45\x51\x14\x49\x7b\x7f\xc7\xa5\x99\xe1\x6c\x69\xfd\xcc\xd2\xfa\x19\xa4\x93\xa1\x1d\x86\xe6\x0a\xcc\xb8\x24\xab\x39\x43\xe5\xbd\x5c\xa6\x06\xad\xc6\x12\x65\x28\x94\xb0\xac\x8f\x0d\x91\xd9\xcd\xd9\x8a\x4a\x2d\x01\xe3\x75\x11\x4d\x87\x86\xe3\xdd\x07\x43\x8d\x6b\xb2\x03\x79\x85\xf5\xd3\x09\xeb\x73\x84\xa9\xdd\x99\x71\xf4\x91\x3a\x57\x21\xc7\x0f\x56\x84\x82\x10\x39\x71\xa8\x93\x2f\x47\x7c\xf5\x17\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\xc8\x57\x0c\x29\x98\xfc\x99\x04\x68\x28\xa5\x78\x3b\xbe\x41\x08\x6d\xa9\x7b\x17\x00\x80\xc9\x15\xd5\x31\x00\xf4\x7e\x00\x9c\x47\x00\xf8\x97\x0f\x80\xfb\xcb\x00\xb0\x0c\x00\x2e\x4b\x00\xd0\x09\x00\x56\xd8\x07\xce\x7c\xb8\x0d\x00\x70\x20\x1a\x29\xaf\x4d\xbc\x7d\xf5\xc2\x91\xc2\xb3\x95\x45\x3d\x97\x7e\xd9\x5d\xd4\xbd\xf6\x6a\x79\xe7\xbc\x63\xd7\xef\xc0\x56\x76\x1e\x8b\xae\xe9\xfa\xc3\xf7\x4f\x53\xf3\xe7\xff\x7e\x11\x56\xd5\xff\xce\xd3\x3f\x5f\xb2\xe1\x95\xf9\x67\x06\xef\xfb\xa8\x77\xcb\xa1\xa7\xef\x2a\x60\x61\xff\x83\xfb\x46\x96\x9d\xfc\xd9\x33\xec\xc9\x85\xc3\x7f\xfa\xa0\x77\xc9\x4b\x15\xa3\xf5\x43\xf3\x4f\x3c\x2a\xf7\xc5\x4e\x0b\x47\x0b\x3e\x5a\x29\xf6\x0e\x91\xeb\xcf\xac\x51\x63\xc7\x6f\x7e\xfd\xd8\xb9\xdb\x02\x85\x77\x1f\x3f\xbb\x70\xed\x77\xb6\x9e\x6b\xb9\xba\xe9\x07\xbf\x01\x0f\xf6\x37\x2e\x7b\xab\xbf\xf1\xdb\xfb\xfb\x1b\x2f\x7e\xf1\xfe\xaa\xeb\x0b\xff\xc1\x81\xf7\x1b\x56\x6c\x2c\xa2\x3e\x1f\x05\x00\x80\xe8\xa6\xed\x91\xa3\x1b\x1b\x1f\xf8\x4f\x00\x00\x00\xff\xff\x8e\x7e\x6d\xb1\xfc\x43\x00\x00")

func border_topleftPngBytes() ([]byte, error) {
	return bindataRead(
		_border_topleftPng,
		"border_topleft.png",
	)
}

func border_topleftPng() (*asset, error) {
	bytes, err := border_topleftPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "border_topleft.png", size: 17404, mode: os.FileMode(420), modTime: time.Unix(1596959592, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mask_topleftPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\x7d\x6c\x1b\xe5\x1d\xc7\x9f\xb2\xac\x6a\xd3\x66\xcd\x20\xa3\x03\xd6\x71\xba\x8e\xb2\xaa\xbb\xdc\x9b\xcf\x8e\x4f\xce\x35\xe1\xdc\x10\x43\x5d\x9c\x97\x96\x24\x4a\x35\x9e\xbb\x7b\x9c\x9c\xea\x7b\xd9\xdd\x25\x71\xaa\x15\xf5\x65\xa9\x20\x55\x61\x65\x5d\xd5\x34\x20\xf6\x47\x37\x55\x42\x20\x3a\x4a\x41\x2b\x5d\xbb\xad\x94\x6d\xda\xd2\x85\x15\x6d\x62\x6b\xa2\xae\x6c\xdd\x28\xd3\x10\xa0\x51\x56\x34\xa6\xb3\xe3\xc4\xb1\x9d\x28\x5d\xd8\x04\xd2\x73\x92\x23\xe5\xf9\x3d\xdf\xef\xe7\xee\x79\xf9\xf9\x77\xcf\x1f\x7e\x38\xb1\xe1\xee\x8a\xf2\x5b\xcb\x01\x00\x15\xb1\xc6\x68\x33\x00\xa0\xca\xff\x2c\x5a\x08\x00\xd8\xfb\xf0\x8a\x0a\x00\xc0\x62\xbb\xb1\xdd\x05\x60\xc9\x4d\xfe\x67\x01\x38\xf4\xf8\x17\x01\x58\xb0\x5b\x97\xe5\x44\xa2\xdb\xf2\x2c\xb7\xdb\xb2\x89\x98\x2c\x13\xb6\x63\x25\xf5\x14\x02\x20\xfd\xfa\xd3\xfb\x8e\xde\xb3\xb2\xa9\x6a\xf7\xa9\xe1\x33\x1b\xd9\x07\xda\x76\x76\x3c\xd4\x99\x38\xa3\x90\xa3\x54\x60\x74\x55\x03\x33\x38\x10\x1d\xf8\xca\x05\x8d\x3b\x3b\x10\x73\x86\x3a\x9b\x6e\x3f\x3d\xd2\xb0\x64\xb4\xa1\xe9\xeb\xf5\xc7\x8e\x3e\x5b\xb5\x84\x2a\xab\x5f\x24\xed\x22\x16\x91\xdc\xcd\x2d\xeb\x9f\x7b\x2b\x78\x6d\xe3\xf8\x07\x7b\x7e\x76\xf1\xc3\xca\x57\x7f\xd0\xbc\xa1\xec\xc8\x6b\xcf\x0f\x3f\x39\xbc\x6f\x40\x89\x1d\x7f\xe1\xaf\xe4\x2f\xef\x7b\xf5\xbd\x43\x9b\x5a\xd0\x81\x03\x37\x7f\xc0\xdf\x30\xf6\x64\x25\x78\x74\x71\xcb\xea\x2e\xe3\xdf\x97\xfa\xb7\x76\xbd\xfb\xc6\x9f\x5e\xf9\xe9\x68\x5d\xc7\x6d\x1f\x3e\xf1\xcc\xe0\x85\x63\x75\x1e\xd8\xf4\x7d\xfd\xb5\xba\x9a\xed\x70\xf5\xfd\xbb\x6a\xca\x6e\x1c\xee\xd0\x2b\x5f\xa8\xfb\x23\x55\x75\x2f\xd1\x51\xf7\xd2\x9b\xd7\xd6\x54\xd2\xcb\x07\xef\x58\xb4\x6e\xfb\x8b\x27\x1e\x3b\x77\xd7\x91\x65\x0f\x7d\x77\xdb\xed\x0b\x94\x8d\xe3\x77\xee\x38\xf8\xbc\xb9\x89\xd8\xff\x99\xa5\x1f\x2d\x04\xa2\xfb\x9c\x43\x0e\xdd\xa3\x5d\x3d\x77\xfe\xf1\x8a\x35\x57\x6f\x69\x3a\xf1\xe3\x1f\x2d\x3d\xb3\xfd\x41\xe7\x57\xe4\x10\x11\x1b\x2c\xbb\xc5\xb0\xf4\xed\x29\xd9\x38\x71\xea\xa9\x2b\x1d\xc9\xfd\x4e\x6a\xc8\x38\x7f\x7e\xf7\xf1\xcd\xf2\xc8\xef\x9e\x6e\x92\x1f\xb9\xf3\x95\xc7\xc0\x80\x12\xfb\xd7\x53\xe3\xef\x2c\xaa\x7b\x2f\x52\xd6\x7e\xa9\xaa\x79\x57\xe5\x58\xc5\x0f\xdf\x59\xd0\xb9\x59\x1e\xdf\xfc\xed\x8a\x15\xf2\xfb\x55\x9d\x63\x6b\x7e\x2b\xec\xda\x3d\xbe\xf2\xa3\x43\xc3\x5b\x4e\x9d\xdd\xf6\xe8\x48\xdd\x1f\xf6\x5c\x3e\x59\x21\x5f\x93\xbe\xf9\xf7\xfe\xb1\xcb\x43\x97\xb7\x3d\x21\xbf\xf8\xd9\xd0\x48\x68\xd5\x11\xfd\xe2\xde\x97\x36\xfd\x1c\x80\xfa\x84\xde\xda\xe6\xb5\xc5\xd7\x8b\xaa\x65\x54\x43\xcd\x52\x50\x75\xda\xb0\x81\x7f\x45\xd6\xa6\x6d\xa8\x6e\x41\x1e\xa1\xa0\x2e\xdd\xac\x25\xff\x71\xe2\x14\x49\xe8\x5a\x2d\x79\xbf\x10\x67\xe2\xb6\x8c\xba\xf5\xc6\xad\x0e\x6a\xd9\xba\xa1\x55\xdd\xba\x45\x0d\x6b\xe4\x5a\xa9\x3c\x92\x16\xd3\x86\x6d\x20\x0f\x12\x69\x23\x65\xba\x62\xba\x96\xcc\xf8\x8a\xa6\x2b\xfa\xcd\x34\x49\x64\xba\x78\x5b\x6a\xc9\x7a\x3f\x40\xb4\xc5\x13\x84\x6c\x39\x88\x10\xaa\x83\x94\xca\xb2\x2c\x11\x0a\x57\xb3\x42\x0d\xcf\x09\x5f\x23\x38\x86\x15\x68\x26\x4c\xb3\x0c\xc5\xb0\x22\xcb\x88\x1c\x43\x4c\x5c\xa4\x54\x4e\x10\x44\xc4\xd1\x92\x62\x73\xb4\x61\x02\xe7\x68\xc9\x5a\xb2\xdb\xf3\x6c\x91\xa6\xfb\xfa\xfa\xaa\xfb\xf8\x6a\xcb\xe9\xa2\xd9\x70\x38\x4c\x33\x1c\xcd\x71\x94\xa3\x25\x29\xb7\xdf\xf4\x60\x9a\x32\xdd\x95\x59\x93\x9c\x4f\x14\xb9\xaa\xa3\xdb\x9e\x6e\x99\x84\xff\x3f\x54\xac\x1e\xaf\x96\x24\xcb\x89\xbc\x6b\xe2\xb9\x0c\x7b\x12\x64\xba\x13\x63\xa7\x5a\x06\x9d\x86\x36\xcd\x56\x33\x74\x29\x91\xa6\x4e\x6a\xec\x1e\x27\x95\xb9\x35\x4d\xa5\x51\x0a\x19\xc8\xf4\x5c\x9a\xad\x66\x4b\xea\xd2\x86\x1d\x8f\xcf\x8e\x33\x8c\x92\x4a\xd7\x5b\xd7\xeb\xcd\xae\x74\x5b\xfb\x6d\x44\x37\x23\xd7\xea\x71\x54\xb4\xae\x17\x99\xde\xca\xd2\x56\xcd\x28\x79\x3d\x56\xcd\x28\x59\xd2\xc8\xce\x65\x80\xd2\x66\x93\xe1\x19\x87\xd1\xd3\x93\x33\xdc\x88\x1f\x99\x51\x86\xd2\xfa\x0c\x32\x3f\x92\x95\x49\x53\xba\x48\xda\xb0\x45\xd9\x41\xd0\xb3\x9c\x56\xcb\x4a\x49\xd9\xe5\x3a\x95\xbf\x64\x39\xb3\x3c\x89\xaf\xc6\xa1\xaa\x9b\x7e\xe3\xea\x08\x5d\x28\x2a\xe5\x87\xa2\xd0\x43\x12\xc7\x70\x0c\xc5\xd4\x50\x4c\xb8\x95\x09\x8b\x6c\x58\x14\xb8\x35\x0c\x27\x32\x4c\x9e\x49\xb6\x67\x81\x47\x1c\x79\x50\x83\x1e\x2c\xe1\x22\xf0\x05\x2e\xd3\xfa\x16\xfa\x58\x9a\x9e\xec\x9f\x93\xcb\x54\xcf\x3c\x0f\x4d\x15\x93\x96\x63\x40\x4f\xd2\x0d\xd8\x85\x68\xdb\xec\x8a\xd0\x53\x8d\xd3\x69\xf1\xb8\x18\x33\x5d\x0f\x9a\x2a\x8a\x45\xa5\xb4\x61\x57\xeb\xba\x26\x42\x45\x10\x42\x35\x0c\x4f\x71\x10\xaa\x54\x00\x09\x49\xaa\x46\xd1\x54\x4a\x80\x8a\xc0\xf0\xa1\x00\xcb\xa1\x64\xe6\x16\xa6\xcb\x8b\xac\xa3\x96\xda\xe3\x6f\xa1\x58\x54\xca\x66\x1b\xcd\x52\x75\x6d\x6a\xa5\x89\x9a\xaa\xb2\x8a\xa2\x70\x14\x0b\x21\x4f\xb1\x6c\x08\x51\x8a\x50\x23\x50\x0a\x87\x50\x30\x88\x82\x0c\x1b\x62\x73\xa0\x3c\xb3\x22\xd0\x7d\x8e\xde\xa5\x9b\x30\x95\xd7\xc7\x7f\x16\x4d\xd7\x44\x41\x60\x93\x1a\x64\x92\x54\x20\xc8\x0b\x54\x80\x65\x39\x4a\xa9\x49\x2a\x14\x57\x03\x39\x01\x69\x8c\xa0\x2a\x4a\x0e\x51\xc2\xa6\x08\xd5\xa8\xbb\x9e\xe5\xf4\x4b\xd3\x56\x72\x26\x4d\xb5\xa0\x6f\x4c\x6f\xcd\x05\x52\x7a\x26\x6d\xd9\xd0\x71\x91\xbf\x15\x6b\xc9\xdc\x5e\x24\x8b\x04\xbe\x26\x93\x1d\x44\xa8\xfa\x09\x4f\x52\x33\x0b\x4e\x8b\xd0\xd3\x5a\x67\x96\xe9\xc5\xd3\x39\xb7\x21\x28\x92\xcf\xcc\xe8\xeb\x46\xe6\x6c\x1b\x25\xaf\xd7\xcc\x26\xae\x95\xf4\xfa\xa0\x83\xea\xbb\x90\xe9\xcd\x6d\x17\x97\x12\x16\x8d\x38\x9d\x1d\xf2\xff\xc1\x54\xb8\xb0\x77\x7e\x13\xa1\xa8\x3c\x1f\xe4\xb4\x00\xa5\x6a\xac\x3f\x1b\x1a\x4f\x29\xa1\x24\x47\x05\x91\x06\x21\xcb\x85\x60\x20\xcc\xcc\x77\x22\x78\x5e\xe4\xc2\x9f\x84\x89\x98\x02\xa8\xdd\xd0\xec\x42\x9a\x44\xe7\x84\xb9\x86\x4f\xd3\xdc\xf1\x88\x87\x8c\x1a\x56\x29\x2d\xac\xa8\x54\x40\x53\x55\x2a\xec\xef\x29\x06\x31\x41\x5e\x0d\xa8\x30\xa8\x09\xf3\x9d\xbb\x69\x19\x1e\xcf\xdd\x64\x0a\xb4\xcc\x5e\xe4\x5c\x4f\x12\xb4\xa1\x03\x0d\xe4\x21\xc7\x95\x92\x8e\x65\x10\xd0\xb6\x53\xba\x0a\x7d\x15\xdd\x6b\x6a\x13\x35\xc6\xe4\xf7\x10\xe1\x59\x44\xde\x97\x65\x91\xc7\xff\xf1\x59\x35\xe4\xe8\xd7\xb3\x52\xf3\xee\x72\x72\x98\x88\x4f\xd9\x33\xcf\x7b\x6f\xce\xad\x5e\xc1\x7b\xb3\xa0\x68\xa1\x8b\xab\x96\x5c\x25\x54\x5c\xe5\xe4\x4a\xba\xec\xfa\x6c\xf0\x57\xd8\xdc\x66\x3c\x92\x79\x43\x99\x4f\x4a\x2d\x90\x97\x72\xd7\xfe\xdb\xc2\xaf\x48\x5e\xca\xdd\x9a\x6f\x79\x39\xa3\x4d\xf1\xc8\xe7\x0d\x70\x7e\x74\xaa\x66\x96\xad\x94\xe5\xc4\x2d\x0d\x49\x7c\x84\x2e\xd5\x5c\x52\x15\x93\xe5\x44\xf6\x50\x47\x6a\x8c\x12\x21\x26\x4c\xd5\xe7\xab\xf3\xc2\x79\x72\xff\xbd\xcd\x2f\x8a\x91\xe9\x65\xf2\x88\xc4\x46\xe8\xa2\xb6\xc2\xfe\x6d\xfe\x3a\x48\xf5\x64\x62\x21\x8e\x61\x18\x86\x66\xfd\xbf\x13\xd2\xfc\x70\xa1\xb4\x7d\x76\x69\xfb\x2c\xd2\xa9\xd0\x46\x53\xf7\x24\x6e\x42\x52\xd0\x9c\xa7\xf2\x5f\x2e\xb3\x83\xd6\x62\x43\x15\x49\x41\x41\xe0\x85\x08\x5d\xd8\x5c\xa8\x48\xe8\x69\x94\x6a\x8b\xea\x06\x32\x5d\xff\x3e\x38\x66\x42\x53\x18\x28\x29\x6c\x9f\x49\xd8\x5e\x24\xcc\xee\xce\xbc\xa3\x8f\xec\xb9\x0a\x3d\x71\xb0\x22\x95\x47\xe8\xc9\x43\x9d\x52\x39\xe2\xe3\xbf\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x30\x04\x43\x3e\x66\x48\xf9\xd4\xcf\x24\x20\x53\xab\x25\xfb\xc8\xb5\xd2\x5f\xde\x3e\x7c\x2f\x00\x80\x50\x1b\x9b\xe3\x00\x18\x07\x01\x70\x1f\x01\xe0\x9f\x3c\x00\x3b\xea\x00\xb0\x4d\x00\x2e\x29\x00\xb0\x69\x00\x6e\x72\xf6\xff\xe4\x8d\xf5\x00\x00\x23\x16\xad\x6f\x4d\xbf\xfe\xd6\xb9\xa3\x8b\xbf\x95\xa8\x5c\x78\xb1\xff\xcb\xdd\xcb\x94\xdb\x96\x77\x2e\x2f\xef\xd8\x2f\x0c\x6e\x3b\xf8\xeb\x3b\xca\x97\x7d\xbe\xec\x42\xe3\x97\xae\x7e\xa7\x42\xfa\xfd\x61\x27\xb1\xf8\xd8\x95\x07\xeb\x4e\x8e\x8d\xb4\xbc\x7f\xe5\xfc\x2f\xf6\xfc\xf9\x37\x77\xaf\x38\xd9\xfe\xb9\xb1\xb3\xce\xb3\xa1\x23\x87\x0f\x9c\x5e\x1a\x28\x6b\x05\x72\xd5\xf1\x1d\xd4\x8e\x2f\x9c\x0e\xdd\xb8\xfe\xcd\x1b\x5a\xf7\x7d\x6f\x94\x7e\x77\x27\x7d\x35\xf0\xf6\x5a\xf0\xb7\xbd\x72\xef\xcb\x2f\xaf\xba\x15\x00\x00\x62\xeb\x36\x44\x9f\xb9\xeb\x81\x9d\xff\x09\x00\x00\xff\xff\x25\xe7\x8f\x59\xd5\x43\x00\x00")

func mask_topleftPngBytes() ([]byte, error) {
	return bindataRead(
		_mask_topleftPng,
		"mask_topleft.png",
	)
}

func mask_topleftPng() (*asset, error) {
	bytes, err := mask_topleftPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mask_topleft.png", size: 17365, mode: os.FileMode(420), modTime: time.Unix(1596959633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"border_left.png": border_leftPng,
	"border_top.png": border_topPng,
	"border_topleft.png": border_topleftPng,
	"mask_topleft.png": mask_topleftPng,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"border_left.png": &bintree{border_leftPng, map[string]*bintree{}},
	"border_top.png": &bintree{border_topPng, map[string]*bintree{}},
	"border_topleft.png": &bintree{border_topleftPng, map[string]*bintree{}},
	"mask_topleft.png": &bintree{mask_topleftPng, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

